//Paste this in the console if you want to test selectors for Page objects easily:


doc = document
Tools = {parse: (textToParse) => {
		textToParse = String(textToParse).trim();
		if(textToParse === 'Не огр.' || textToParse === 'Unlim.' || textToParse === 'Не обм.' || textToParse === 'N’est pas limité' || textToParse === 'No limitado' || textToParse === '无限' || textToParse === 'Nicht beschr.') {
			return Number.POSITIVE_INFINITY;
		} 
		else {
			return parseFloat(textToParse.replace(/[\s\$\%]/g, "")) || 0;
		}
	}, try: (func) => {
		try{
			return func();
		}
		catch(e){

			const allowedFailures = [
				"doc.querySelector(...) is null",
				"doc.querySelector(...).nextElementSibling is null",
				"reDoc.querySelector(...) is null",
				"reDoc.querySelector(...).nextElementSibling is null",
				"e.extract(...)[0] is undefined"
			]

			if(!allowedFailures.includes(e.message)){
				console.error("Tools Try Error (could be intended): "+e.message);
			}
			return null;
		}
	}}
Node.prototype.extract = function(selector){
	return Array.from(this.querySelectorAll(selector));
}
$html = $(document)